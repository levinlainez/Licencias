<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Editar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        C9m+/shV2885/pXxSIbxBX8OKv6bbp848tXdoSD95wCMQjoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQ
        WzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWl
        IwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoC
        ALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQ
        WzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWl
        IwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoC
        ALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQWzoCALWlIwBQ
        WzoCAJWdfdT/B89GQLVBk77bAAAAAElFTkSuQmCC
</value>
  </data>
</root>